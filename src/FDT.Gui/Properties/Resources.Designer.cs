//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FDT.Gui.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FDT.Gui.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot run (no basins).
        /// </summary>
        internal static string AssessmentStatus_LoadingBasins_Cannot_run__no_basins_ {
            get {
                return ResourceManager.GetString("AssessmentStatus_LoadingBasins_Cannot_run__no_basins_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run damage assessment.
        /// </summary>
        internal static string AssessmentStatus_Ready_Run_damage_assessment {
            get {
                return ResourceManager.GetString("AssessmentStatus_Ready_Run_damage_assessment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running (please wait).
        /// </summary>
        internal static string AssessmentStatus_Running_Running__please_wait_ {
            get {
                return ResourceManager.GetString("AssessmentStatus_Running_Running__please_wait_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return period should be greater than 0.
        /// </summary>
        internal static string BaseFloodMap_this_Return_period_should_be_greater_than_0 {
            get {
                return ResourceManager.GetString("BaseFloodMap_this_Return_period_should_be_greater_than_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Water depth.
        /// </summary>
        internal static string FloodMapTypeStringConverter_Convert_Water_depth {
            get {
                return ResourceManager.GetString("FloodMapTypeStringConverter_Convert_Water_depth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Water level.
        /// </summary>
        internal static string FloodMapTypeStringConverter_Convert_Water_level {
            get {
                return ResourceManager.GetString("FloodMapTypeStringConverter_Convert_Water_level", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flood map file (*{0}) | *{1}.
        /// </summary>
        internal static string InputFieldFloodMap_OnOpenFileDialog_Flood_map_file____0_______1_ {
            get {
                return ResourceManager.GetString("InputFieldFloodMap_OnOpenFileDialog_Flood_map_file____0_______1_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to detect directory structure..
        /// </summary>
        internal static string MainWindow_ExposureDirectoryNotFound_MessageCaption {
            get {
                return ResourceManager.GetString("MainWindow_ExposureDirectoryNotFound_MessageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It was not possible to find a valid Exposure directory, please check your folder structure.
        ///Detailed error {0}.
        /// </summary>
        internal static string MainWindow_ExposureDirectoryNotFound_MessageError {
            get {
                return ResourceManager.GetString("MainWindow_ExposureDirectoryNotFound_MessageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed run.
        /// </summary>
        internal static string MainWindow_OnAssessmentActionClick_AssessmentFailed_Caption {
            get {
                return ResourceManager.GetString("MainWindow_OnAssessmentActionClick_AssessmentFailed_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assessment run failed, reason: {0}.
        /// Contact support for more details..
        /// </summary>
        internal static string MainWindow_OnAssessmentActionClick_AssessmentFailed_Message {
            get {
                return ResourceManager.GetString("MainWindow_OnAssessmentActionClick_AssessmentFailed_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished run.
        /// </summary>
        internal static string MainWindow_OnAssessmentActionClick_AssessmentFinished_Caption {
            get {
                return ResourceManager.GetString("MainWindow_OnAssessmentActionClick_AssessmentFinished_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assessment run finished.
        ///For more details check the results directory at {0}.
        /// </summary>
        internal static string MainWindow_OnAssessmentActionClick_AssessmentFinished_Message {
            get {
                return ResourceManager.GetString("MainWindow_OnAssessmentActionClick_AssessmentFinished_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Area of interest changed.
        /// </summary>
        internal static string MainWindow_OnBasinSelectionChanged_Area_of_interest_changed {
            get {
                return ResourceManager.GetString("MainWindow_OnBasinSelectionChanged_Area_of_interest_changed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the database root directory.
        /// </summary>
        internal static string MainWindow_OnSelectRootDirectoryClick_Select_the_database_root_directory {
            get {
                return ResourceManager.GetString("MainWindow_OnSelectRootDirectoryClick_Select_the_database_root_directory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select area of interest.
        /// </summary>
        internal static string MainWindow_SelectAreaOfInterest_Label {
            get {
                return ResourceManager.GetString("MainWindow_SelectAreaOfInterest_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select root directory.
        /// </summary>
        internal static string MainWindow_SelectRootDirectory_Button {
            get {
                return ResourceManager.GetString("MainWindow_SelectRootDirectory_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save shapefile.
        /// </summary>
        internal static string MainWindowViewModel_SaveShapefileLabel {
            get {
                return ResourceManager.GetString("MainWindowViewModel_SaveShapefileLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scenario name is required.
        /// </summary>
        internal static string Scenario_this_Scenario_name_is_required {
            get {
                return ResourceManager.GetString("Scenario_this_Scenario_name_is_required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only use flood maps with coordinate system {0} for this area of interest..
        /// </summary>
        internal static string SelectBasinHelper_GetSelectedBasinWarning_Only_use_flood_maps_with_coordinate_system__0__for_this_area_of_interest_ {
            get {
                return ResourceManager.GetString("SelectBasinHelper_GetSelectedBasinWarning_Only_use_flood_maps_with_coordinate_sys" +
                        "tem__0__for_this_area_of_interest_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The area of interest {0} does not have an associated projection file..
        /// </summary>
        internal static string SelectBasinHelper_GetSelectedBasinWarning_The_area_of_interest__0__does_not_have_an_associated_projection_file_ {
            get {
                return ResourceManager.GetString("SelectBasinHelper_GetSelectedBasinWarning_The_area_of_interest__0__does_not_have_" +
                        "an_associated_projection_file_", resourceCulture);
            }
        }
    }
}
