//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FIAT.Backend.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FIAT.Backend.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while running basin: {0}, scenario: {1}.
        /// </summary>
        internal static string DamageAssessmentHandler_Run_Error_while_running_basin___0___scenario___1_ {
            get {
                return ResourceManager.GetString("DamageAssessmentHandler_Run_Error_while_running_basin___0___scenario___1_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}
        /// Detailed error: {1}.
        /// </summary>
        internal static string DamageAssessmentHandler_Run_ErrorLine {
            get {
                return ResourceManager.GetString("DamageAssessmentHandler_Run_ErrorLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Flood map type {0}.
        /// </summary>
        internal static string HazardRowEntry_GetInundationReference_Unknown_Flood_map_type__0_ {
            get {
                return ResourceManager.GetString("HazardRowEntry_GetInundationReference_Unknown_Flood_map_type__0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All selected scenarios should contain a valid name..
        /// </summary>
        internal static string XlsDataWriteHelper_ValidateFloodDamageBasinData_All_selected_scenarios_should_contain_a_valid_name_ {
            get {
                return ResourceManager.GetString("XlsDataWriteHelper_ValidateFloodDamageBasinData_All_selected_scenarios_should_con" +
                        "tain_a_valid_name_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid scenarios were provided..
        /// </summary>
        internal static string XlsDataWriteHelper_ValidateFloodDamageBasinData_No_valid_scenarios_were_provided_ {
            get {
                return ResourceManager.GetString("XlsDataWriteHelper_ValidateFloodDamageBasinData_No_valid_scenarios_were_provided_" +
                        "", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All selected Flood Maps with return period should be greater than 0..
        /// </summary>
        internal static string XlsDataWriteHelper_ValidateFloodMapsWithReturnPeriod_All_selected_Flood_Maps_with_return_period_should_be_greater_than_0_ {
            get {
                return ResourceManager.GetString("XlsDataWriteHelper_ValidateFloodMapsWithReturnPeriod_All_selected_Flood_Maps_with" +
                        "_return_period_should_be_greater_than_0_", resourceCulture);
            }
        }
    }
}
